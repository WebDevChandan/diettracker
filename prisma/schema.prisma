// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum AllCategory {
  breakfast
  lunch
  dinner
  snacks
  other
}

type FoodItem {
  id             String        @default(cuid())
  name           String
  currentWeight  Int           @default(0)
  calories       Int
  protein        Int
  fat            Int
  carbs          Int
  sugar          Int
  amountPer      Int
  category       AllCategory[]
  listed         Boolean       @default(false)
  listed_item_id String
}

type Profile {
  weight                   Int
  heightCm                 Int
  heightFeet               Int
  heightInches             Int
  age                      Int
  weightUnit               String
  heightUnit               String
  gender                   String
  activityLevel            String
  weeklyWeightLoss         String @default("")
  calorieDeficitPreference String @default("")
}

type Goal {
  bmr            Int
  tdee           Int
  calorieDeficit Int
  calorieGoal    Int
}

model FoodItemList {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  currentWeight Int           @default(0)
  calories      Int
  protein       Int
  fat           Int
  carbs         Int
  sugar         Int
  amountPer     Int
  category      AllCategory[]
  listed        Boolean       @default(false)
  user          User          @relation(fields: [user_id], references: [id])
  user_id       String        @db.ObjectId
  created_at    DateTime      @default(now())
  update_at     DateTime      @updatedAt
}

model User {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  lastName     String
  email        String         @unique
  clerkUserID  String         @unique
  diet         FoodItem[]
  FoodItemList FoodItemList[]
  created_at   DateTime       @default(now())
  update_at    DateTime       @updatedAt
  UserFitness  UserFitness?
}

model UserFitness {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userEmail  String   @unique
  profile    Profile
  goal       Goal
  User       User     @relation(fields: [userEmail], references: [email])
  created_at DateTime @default(now())
  update_at  DateTime @updatedAt
}
